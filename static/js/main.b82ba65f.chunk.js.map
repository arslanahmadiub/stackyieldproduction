{"version":3,"sources":["action/tabAction.js","Components/Recmondation/Tabs.js","Assets/images/logoicon2.png","Components/Recmondation/CurrencySystem.js","Components/Recmondation/CustomCircleCrypto.js","Services/ChatServices.js","action/chatScreenAction.js","Components/Recmondation/GraphScreenLeft.js","Components/Recmondation/GraphScreenCenter.js","action/currencyAction.js","Components/Recmondation/GraphScreen.js","Components/Recmondation/CustomCircle.js","Components/Recmondation/FiatScreenLeft.js","Components/Recmondation/FiatScreenCenter.js","Components/Recmondation/FiatScreen.js","Components/Recmondation/TabScreen.js","Components/Recmondation/RecmondadPlatformList.js","Components/Recmondation/MainRecmondationScreen.js","Components/Chat/ChatScreen.js","Assets/images/logo.png","Assets/images/cpu.png","Components/Chat/Chat.js","App.js","reducer/chatScreenReducer.js","reducer/tabReducer.js","reducer/currencyReducer.js","reducer/index.js","store.js","index.js"],"names":["tabAction","data","type","payload","changeTabAction","TabHeader","Styled","div","TabLabelItem","props","selected","TabBody","Tabs","dispatch","useDispatch","tabName","useSelector","state","tab","tabNumber","useState","selectedTab","setSelectedTab","showDatePicker","setShowDatePicker","tabNumberGet","newTabNumber","useEffect","setTimeout","headers","changeTab","index","h","event","dateShow","id","style","background","color","onClick","map","header","children","CurrencySystem","currency","value","Grid","container","spacing","item","xs","display","width","height","borderRadius","flexDirection","marginLeft","fontSize","marginTop","fontWeight","justifyContent","button","Button","minWidth","minHeight","padding","handelClick","src","logoicon","cursor","CustomCircleCrypto","amount","position","className","top","textAlign","length","overflow","fietApiUrl","apiEndPoint","cryptoApiUrl","formFiatApi","a","axios","method","url","formCryptoApi","cryptoDataAction","fiatDataAction","userCryptoDataSaveAction","userFiatDataSaveAction","useStyles","makeStyles","theme","table","mobileTable","backdrop","zIndex","drawer","GraphScreenLeft","classes","buttonGroup","border","buttonGroupActive","loading","setLoading","cryptoData","chatScreen","conversion_dict","history","useHistory","cryptoDict","crypto_dict","cryptoDictInput","userCryptoData","count_crypto","amountText","setAmountText","currencyWithAmount","Object","keys","coinPriceWithoutComa","price","replace","parseFloat","toFixed","covertAmount","endDate","setEndDate","activeButton","setActiveButton","getEndDate","days","today","Date","finalNext","setDate","getDate","finalDate","moment","format","userCryptoDataFromStore","getNewCryptoStacking","apiTwoFormData","FormData","dataObject","end_date","type_crypto","newData","JSON","stringify","append","handelClickInput","e","Backdrop","open","CircularProgress","direction","Hidden","only","ButtonGroup","sm","md","lg","bottom","overflowY","push","paddingLeft","Paper","elevation","entries","key","randomColor","charAt","toUpperCase","slice","GraphScreenCenter","profitData","profit","profitDataList","profit_dict","rateSetting","setRateSetting","setCryptoCurrencyName","undefined","cryptoObject","changeRate","changerate","currencyFunction","reward_dict","paddingRight","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","colSpan","daily","weekly","monthly","yearly","paddingTop","Background","paddingBottom","borderBottom","href","Link","target","MainColor","Reward","GraphScreen","React","checkedA","checkedB","CustomCircle","text","FiatScreenLeft","fiatDate","userFiatData","fiatConversionDict","Array","isArray","fiatData","recommended_fiat_dict","converted_cryptos","fiatAmount","changerate_cryptos","count_fiat","secondApi","t","c","formCryptoData","toString","emailToast","conversionClick","v","k","toast","error","autoClose","draggable","right","FiatScreenCenter","recommended_crypto","Name","conversionrate","setError","handelStacking","float","marginRight","marginBottom","Alert","variant","severity","overflowX","FiatScreen","fiatChangeRate","fiatPriceDict","price_dict","TabScreen","showDateInput","setShowDateInput","userCrypto","userFiat","getShow","handelDayClick","onClickDay","minDate","RecmondadPlatformList","MainRecmondationScreen","justify","alignItems","ChatScreen","dateValue","setDateValue","tomorrowDate","setTomorrowDate","getTomorrow","questionList","message","ansType","messages","setMessages","firstAnswer","setFirstAnswer","messageInput","setMessageInput","handelReload","renderAnswer","boleanQuestionAnswerComponent","textQuestionAnswerComponent","submitAnswerComponent","goodBy","disableElevation","startIcon","endIcon","IconButton","handelSend","placeholderValue","typeValue","onChange","handelMessageInput","onKeyDown","handelMessageSend","placeholder","autoFocus","autoComplete","firstApi","messageData","apiOneFormData","formFiatData","dispatchUserData","newData2","handelSubmit","q1Answer","q2Answer","reloadComponent","addQuestionFunction","previousMessages","previousMessages1","newMessageObject1","addQuestion","animateScroll","scrollToBottom","containerId","element","document","getElementById","scrollTop","scrollHeight","updateScroll","senderObject","newMessage","Img","img","ImgNew","MobImg","Chat","logo","alt","cpu","App","exact","path","initalState","persistConfig","storage","sessionStorage","whitelist","rootReducer","combineReducers","action","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.b82ba65f.chunk.js","sourcesContent":["export const tabAction = (data) => {\r\n  return {\r\n    type: \"GET_TAB_NUMBER\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const changeTabAction = (data) => {\r\n  return {\r\n    type: \"CHANGE_TAB_NUMBER\",\r\n    payload: data,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport { tabAction } from \"../../action/tabAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeTabAction } from \"../../action/tabAction\";\r\n\r\nconst TabHeader = Styled.div`\r\n    display: flex;\r\n    height: 50px;\r\n    border-bottom: .05px solid lightgrey;\r\n    width: 100%;\r\n    \r\n    position: relative;\r\n    `;\r\nconst TabLabelItem = Styled.div`\r\n    font-size: 20px;\r\n    line-height: 50px;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    position: relative;\r\n    color: \"#19469A\";\r\n    padding: 0px 20px;\r\nborder-bottom:${(props) => (props.selected ? \"2px solid #19469A\" : \"\")};\r\n    @media (max-width: 960px){\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst TabBody = Styled.div`\r\n    position: relative;\r\n    top: 25px;\r\n\r\n`;\r\n\r\nconst Tabs = (props) => {\r\n  const dispatch = useDispatch();\r\n  const tabName = useSelector((state) => state.tab.tabNumber);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n\r\n  const tabNumberGet = useSelector((state) => state.tab.newTabNumber);\r\n\r\n  useEffect(() => {\r\n    if (tabNumberGet !== null && tabNumberGet === 0) {\r\n      setSelectedTab(0);\r\n      dispatch(tabAction(\"Crypto\"));\r\n\r\n      setTimeout(() => {\r\n        dispatch(changeTabAction(null));\r\n      }, 500);\r\n    }\r\n  }, [tabNumberGet]);\r\n\r\n  const headers = props.headers;\r\n  const changeTab = (index, h) => (event) => {\r\n    props.dateShow(false);\r\n    setShowDatePicker(false);\r\n    setSelectedTab(index);\r\n    dispatch(tabAction(h));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(tabAction(headers[0]));\r\n  }, []);\r\n\r\n  let handelTabBodyClick = () => {\r\n    if (showDatePicker) {\r\n      setShowDatePicker(false);\r\n      props.dateShow(!showDatePicker);\r\n    }\r\n  };\r\n\r\n  let handelDateClick = () => {\r\n    if (tabName === \"Crypto\") {\r\n      props.dateShow(!showDatePicker);\r\n      setShowDatePicker(!showDatePicker);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TabHeader id=\"tabHeader\">\r\n        <TabLabelItem\r\n          style={{\r\n            background: \"#19469A\",\r\n            color: \"white\",\r\n          }}\r\n          onClick={handelDateClick}\r\n        >\r\n          {tabName === \"Crypto\" ? \"Custom Date\" : \"Recommended Crypto\"}\r\n        </TabLabelItem>\r\n        {headers &&\r\n          headers.map((header, index) => {\r\n            return (\r\n              <TabLabelItem\r\n                style={{ color: \"#19469A\" }}\r\n                key={header}\r\n                onClick={changeTab(index, header)}\r\n                selected={selectedTab === index}\r\n                id=\"tabLabelItem\"\r\n              >\r\n                {header}\r\n              </TabLabelItem>\r\n            );\r\n          })}\r\n      </TabHeader>\r\n      <TabBody id=\"tabBody\" onClick={handelTabBodyClick}>\r\n        {props.children && props.children[selectedTab]}\r\n      </TabBody>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","export default __webpack_public_path__ + \"static/media/logoicon2.fb87a453.png\";","import React from \"react\";\r\n\r\nimport logoicon from \"../../Assets/images/logoicon2.png\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst CurrencySystem = (props) => {\r\n  let { color, currency, value } = props;\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={10}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div\r\n            style={{\r\n              width: \"30px\",\r\n              height: \"30px\",\r\n              background: color ? color : \"red\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginLeft: \"10px\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{ fontSize: \"18px\", marginTop: \"-3px\", fontWeight: \"600\" }}\r\n            >\r\n              {currency ? currency : \"local Currency\"}\r\n            </p>\r\n            <p style={{ fontSize: \"14px\", fontWeight: \"600\" }}>\r\n              {value ? value : \"$500\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={2}\r\n        style={{ display: \"flex\", width: \"100%\", justifyContent: \"flex-end\" }}\r\n      >\r\n        {props.button ? (\r\n          <div>\r\n            <Button\r\n              style={{\r\n                minWidth: \"30px\",\r\n                minHeight: \"30px\",\r\n                background: \"#19469A\",\r\n                borderRadius: \"5px\",\r\n                padding: \"5px\",\r\n              }}\r\n              onClick={props.handelClick}\r\n            >\r\n              <img\r\n                src={logoicon}\r\n                style={{ height: \"20px\", cursor: \"pointer\" }}\r\n              />\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CurrencySystem;\r\n","import React from \"react\";\r\n\r\nconst CustomCircleCrypto = ({ currency, amount }) => {\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div className=\"customCircle\"></div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          display: \"flex\",\r\n          height: \"100%\",\r\n          top: 45,\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {currency && currency.length <= 15 ? (\r\n          <p\r\n            style={{\r\n              fontSize: \"14px\",\r\n              fontWeight: \"606\",\r\n              color: \"#19469a\",\r\n              overflow: \"auto\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {currency}\r\n          </p>\r\n        ) : currency && currency.length <= 20 ? (\r\n          <p\r\n            style={{\r\n              fontSize: \"12px\",\r\n              fontWeight: \"606\",\r\n              color: \"#19469a\",\r\n              overflow: \"auto\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {currency}\r\n          </p>\r\n        ) : currency && currency.length <= 30 ? (\r\n          <p\r\n            style={{\r\n              fontSize: \"9px\",\r\n              fontWeight: \"606\",\r\n              color: \"#19469a\",\r\n              overflow: \"auto\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {currency}\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          display: \"flex\",\r\n          height: \"100%\",\r\n          top: 67,\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          style={{\r\n            fontSize: \"18px\",\r\n            fontWeight: \"606\",\r\n            color: \"#19469a\",\r\n            overflow: \"auto\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          {amount}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCircleCrypto;\r\n","import axios from \"axios\";\r\nimport { apiEndPoint } from \"../Config.json\";\r\n\r\nlet fietApiUrl = apiEndPoint + \"getFormFiat\";\r\nlet cryptoApiUrl = apiEndPoint + \"getFormCrypto\";\r\n\r\nexport async function formFiatApi(data) {\r\n  return await axios({\r\n    method: \"post\",\r\n    url: fietApiUrl,\r\n    data: data,\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n}\r\n\r\nexport async function formCryptoApi(data) {\r\n  return await axios({\r\n    method: \"post\",\r\n    url: cryptoApiUrl,\r\n    data: data,\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n}\r\n","export const cryptoDataAction = (data) => {\r\n  return {\r\n    type: \"SAVE_CRYPTO_DATA\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fiatDataAction = (data) => {\r\n  return {\r\n    type: \"SAVE_FIAT_DATA\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const userCryptoDataSaveAction = (data) => {\r\n  return {\r\n    type: \"SAVE_USER_CRYPTO_DATA\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const userFiatDataSaveAction = (data) => {\r\n  return {\r\n    type: \"SAVE_USER_FIAT_DATA\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const resetUser = () => {\r\n  return {\r\n    type: \"RESET\",\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport CurrencySystem from \"./CurrencySystem\";\r\nimport randomColor from \"randomcolor\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CustomCircleCrypto from \"./CustomCircleCrypto\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { formCryptoApi } from \"../../Services/ChatServices\";\r\nimport moment from \"moment\";\r\nimport { cryptoDataAction } from \"../../action/chatScreenAction\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n  mobileTable: {\r\n    minWidth: 100,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#31BDF4\",\r\n    background: \"rgba(182,172,162,0.2)\",\r\n  },\r\n}));\r\n\r\nconst GraphScreenLeft = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  let buttonGroup = {\r\n    border: \"1px solid #19469A\",\r\n    color: \"#19469A\",\r\n  };\r\n  let buttonGroupActive = {\r\n    border: \"1px solid #19469A\",\r\n    color: \"white\",\r\n    background: \"#19469A\",\r\n  };\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const cryptoData = useSelector(\r\n    (state) => state.chatScreen.cryptoData.conversion_dict\r\n  );\r\n  let history = useHistory();\r\n\r\n  const cryptoDict = useSelector((state) =>\r\n    state.chatScreen.cryptoData ? state.chatScreen.cryptoData.crypto_dict : null\r\n  );\r\n  const cryptoDictInput = useSelector((state) =>\r\n    state.chatScreen.userCryptoData\r\n      ? state.chatScreen.userCryptoData.count_crypto\r\n      : null\r\n  );\r\n\r\n  const [amountText, setAmountText] = useState(null);\r\n\r\n  const currencyWithAmount = useSelector((state) => state.currency.currency);\r\n\r\n  let covertAmount = () => {\r\n    let currency = Object.keys(cryptoDict)[0];\r\n\r\n    let coinPriceWithoutDolor = cryptoDict[currency].price.replace(\"$\", \"\");\r\n    let coinPriceWithoutComa = coinPriceWithoutDolor.replace(\",\", \"\");\r\n    let amount = parseFloat(cryptoDictInput) * parseFloat(coinPriceWithoutComa);\r\n\r\n    setAmountText(\"$\" + amount.toFixed(2));\r\n  };\r\n  useEffect(() => {\r\n    if (cryptoDict) {\r\n      covertAmount();\r\n    }\r\n  }, []);\r\n  let handelAgain = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [activeButton, setActiveButton] = useState(\"1D\");\r\n\r\n  const userCryptoData = useSelector(\r\n    (state) => state.chatScreen.userCryptoData.count_crypto\r\n  );\r\n  let getEndDate = (days) => {\r\n    const today = new Date();\r\n\r\n    let nextDate = new Date();\r\n    let finalNext = nextDate.setDate(today.getDate() + days);\r\n    let finalDate = moment(finalNext).format(\"yyyy-MM-DD\");\r\n    setEndDate(finalDate);\r\n  };\r\n  const userCryptoDataFromStore = useSelector(\r\n    (state) => state.chatScreen.userCryptoData\r\n  );\r\n  let getNewCryptoStacking = async () => {\r\n    let apiTwoFormData = new FormData();\r\n\r\n    let dataObject = {\r\n      count_crypto: userCryptoDataFromStore.count_crypto,\r\n      end_date: endDate,\r\n      type_crypto: userCryptoDataFromStore.type_crypto,\r\n    };\r\n\r\n    let newData = JSON.stringify(dataObject);\r\n    apiTwoFormData.append(\"data\", newData);\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      let { data } = await formCryptoApi(apiTwoFormData);\r\n\r\n      setLoading(false);\r\n\r\n      dispatch(cryptoDataAction(data));\r\n    } catch (error1) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (endDate !== \"\") {\r\n      getNewCryptoStacking();\r\n    }\r\n  }, [endDate]);\r\n\r\n  let handelClickInput = (e) => {\r\n    if (e === \"1D\") {\r\n      getEndDate(1);\r\n      setActiveButton(\"1D\");\r\n    } else if (e === \"1W\") {\r\n      getEndDate(7);\r\n      setActiveButton(\"1W\");\r\n    } else if (e === \"1M\") {\r\n      getEndDate(30);\r\n      setActiveButton(\"1M\");\r\n    } else if (e === \"3M\") {\r\n      getEndDate(90);\r\n      setActiveButton(\"3M\");\r\n    } else if (e === \"6M\") {\r\n      getEndDate(180);\r\n      setActiveButton(\"6M\");\r\n    } else if (e === \"12M\") {\r\n      getEndDate(365);\r\n      setActiveButton(\"12M\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Grid container direction=\"column\">\r\n        {/* top circle full screen */}\r\n\r\n        <Hidden only={[\"xs\", \"sm\"]}>\r\n          {/* button group section */}\r\n\r\n          <ButtonGroup>\r\n            <Button\r\n              style={activeButton === \"1D\" ? buttonGroupActive : buttonGroup}\r\n              onClick={() => handelClickInput(\"1D\")}\r\n            >\r\n              1D\r\n            </Button>\r\n            <Button\r\n              style={activeButton === \"1W\" ? buttonGroupActive : buttonGroup}\r\n              onClick={() => handelClickInput(\"1W\")}\r\n            >\r\n              1W\r\n            </Button>\r\n            <Button\r\n              style={activeButton === \"1M\" ? buttonGroupActive : buttonGroup}\r\n              onClick={() => handelClickInput(\"1M\")}\r\n            >\r\n              1M\r\n            </Button>\r\n            <Button\r\n              style={activeButton === \"3M\" ? buttonGroupActive : buttonGroup}\r\n              onClick={() => handelClickInput(\"3M\")}\r\n            >\r\n              3M\r\n            </Button>\r\n            <Button\r\n              style={activeButton === \"6M\" ? buttonGroupActive : buttonGroup}\r\n              onClick={() => handelClickInput(\"6M\")}\r\n            >\r\n              6M\r\n            </Button>\r\n            <Button\r\n              style={activeButton === \"12M\" ? buttonGroupActive : buttonGroup}\r\n              onClick={() => handelClickInput(\"12M\")}\r\n            >\r\n              12M\r\n            </Button>\r\n          </ButtonGroup>\r\n          <br />\r\n          <div style={{ display: \"flex\", position: \"relative\" }}>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <div style={{ display: \"flex\", position: \"relative\" }}>\r\n                <CustomCircleCrypto\r\n                  currency={currencyWithAmount && currencyWithAmount}\r\n                  amount={amountText && amountText}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  bottom: \"10px\",\r\n                }}\r\n              >\r\n                <h3>\r\n                  Total <br></br> Investment\r\n                </h3>\r\n              </div>\r\n            </Grid>\r\n          </div>\r\n        </Hidden>\r\n\r\n        {/* top circle bottom screen */}\r\n\r\n        <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n          {/* button section */}\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <ButtonGroup>\r\n              <Button\r\n                style={activeButton === \"1D\" ? buttonGroupActive : buttonGroup}\r\n                onClick={() => handelClickInput(\"1D\")}\r\n              >\r\n                1D\r\n              </Button>\r\n              <Button\r\n                style={activeButton === \"1W\" ? buttonGroupActive : buttonGroup}\r\n                onClick={() => handelClickInput(\"1W\")}\r\n              >\r\n                1W\r\n              </Button>\r\n              <Button\r\n                style={activeButton === \"1M\" ? buttonGroupActive : buttonGroup}\r\n                onClick={() => handelClickInput(\"1M\")}\r\n              >\r\n                1M\r\n              </Button>\r\n              <Button\r\n                style={activeButton === \"3M\" ? buttonGroupActive : buttonGroup}\r\n                onClick={() => handelClickInput(\"3M\")}\r\n              >\r\n                3M\r\n              </Button>\r\n              <Button\r\n                style={activeButton === \"6M\" ? buttonGroupActive : buttonGroup}\r\n                onClick={() => handelClickInput(\"6M\")}\r\n              >\r\n                6M\r\n              </Button>\r\n              <Button\r\n                style={activeButton === \"12M\" ? buttonGroupActive : buttonGroup}\r\n                onClick={() => handelClickInput(\"12M\")}\r\n              >\r\n                12M\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n          <br />\r\n          <br />\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100vw\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              overflowY: \"hidden\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                overflowY: \"hidden\",\r\n              }}\r\n            >\r\n              <CustomCircleCrypto\r\n                currency={currencyWithAmount && currencyWithAmount}\r\n                amount={amountText && amountText}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10px\",\r\n                overflowY: \"hidden\",\r\n              }}\r\n            >\r\n              <h2>Total Investment</h2>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Button\r\n              style={{\r\n                background: \"#19469A\",\r\n                color: \"white\",\r\n                marginTop: \"25px\",\r\n              }}\r\n              onClick={handelAgain}\r\n            >\r\n              Try again with different options\r\n            </Button>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Hidden only={[\"xs\", \"sm\"]}>\r\n          <Grid container style={{ marginTop: \"20px\", paddingLeft: \"10px\" }}>\r\n            <Grid item xs={12}>\r\n              <h3> Conversion Rates</h3>\r\n\r\n              <Paper elevation={0} id=\"conversionRatePaper\">\r\n                {cryptoData &&\r\n                  Object.entries(cryptoData).map(([key, value]) => (\r\n                    <CurrencySystem\r\n                      color={randomColor()}\r\n                      key={key}\r\n                      currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                      value={value}\r\n                    />\r\n                  ))}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n          <Grid container style={{ marginTop: \"20px\", paddingLeft: \"10px\" }}>\r\n            <Grid item xs={12}>\r\n              <h3> Conversion Rates</h3>\r\n\r\n              <Paper elevation={0} id=\"conversionRatePaper\">\r\n                {cryptoData &&\r\n                  Object.entries(cryptoData).map(([key, value]) => (\r\n                    <CurrencySystem\r\n                      color={randomColor()}\r\n                      key={key}\r\n                      currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                      value={value}\r\n                    />\r\n                  ))}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GraphScreenLeft;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\n\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setCurrency } from \"../../action/currencyAction\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport { MainColor, Background } from \"../../Colors.json\";\r\nimport { useHistory } from \"react-router\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { formCryptoApi } from \"../../Services/ChatServices\";\r\nimport moment from \"moment\";\r\nimport { cryptoDataAction } from \"../../action/chatScreenAction\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n  mobileTable: {\r\n    minWidth: 100,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#31BDF4\",\r\n    background: \"rgba(182,172,162,0.2)\",\r\n  },\r\n}));\r\n\r\nconst GraphScreenCenter = () => {\r\n  let buttonGroup = {\r\n    border: \"1px solid #19469A\",\r\n    color: \"#19469A\",\r\n  };\r\n  let buttonGroupActive = {\r\n    border: \"1px solid #19469A\",\r\n    color: \"white\",\r\n    background: \"#19469A\",\r\n  };\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const profitData = useSelector((state) => state.chatScreen.cryptoData.profit);\r\n  const cryptoDict = useSelector(\r\n    (state) => state.chatScreen.cryptoData.crypto_dict\r\n  );\r\n  let history = useHistory();\r\n\r\n  const userCryptoDataFromStore = useSelector(\r\n    (state) => state.chatScreen.userCryptoData\r\n  );\r\n\r\n  const [activeButton, setActiveButton] = useState(\"1D\");\r\n\r\n  const userCryptoData = useSelector(\r\n    (state) => state.chatScreen.userCryptoData.count_crypto\r\n  );\r\n\r\n  const profitDataList = useSelector(\r\n    (state) => state.chatScreen.cryptoData.profit_dict\r\n  );\r\n\r\n  const [rateSetting, setRateSetting] = useState(null);\r\n\r\n  let currencyFunction = () => {\r\n    let currency = Object.keys(cryptoDict)[0];\r\n    let cryptoObject = {\r\n      currency: Object.keys(cryptoDict)[0],\r\n      changeRate: cryptoDict[currency].changerate,\r\n      price: cryptoDict[currency].price,\r\n    };\r\n\r\n    setRateSetting(cryptoObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCryptoCurrencyName();\r\n  }, [rateSetting]);\r\n\r\n  let setCryptoCurrencyName = () => {\r\n    let currency =\r\n      rateSetting &&\r\n      rateSetting.currency.charAt(0).toUpperCase() +\r\n        rateSetting.currency.slice(1);\r\n\r\n    if (currency) {\r\n      dispatch(setCurrency(currency + \":\" + userCryptoData));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cryptoDict !== undefined) {\r\n      currencyFunction();\r\n    }\r\n  }, [cryptoDict, profitDataList, profitData]);\r\n\r\n  const cryptoData = useSelector(\r\n    (state) => state.chatScreen.cryptoData.reward_dict\r\n  );\r\n  let handelAgain = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  let getEndDate = (days) => {\r\n    const today = new Date();\r\n\r\n    let nextDate = new Date();\r\n    let finalNext = nextDate.setDate(today.getDate() + days);\r\n    let finalDate = moment(finalNext).format(\"yyyy-MM-DD\");\r\n    setEndDate(finalDate);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          style={{\r\n            paddingLeft: \"15%\",\r\n            paddingRight: \"5%\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              background: \"#19469A\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={handelAgain}\r\n          >\r\n            Try again with different options\r\n          </Button>\r\n\r\n          <br />\r\n\r\n          <Grid item>\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Cryptocurrency </TableCell>\r\n                    <TableCell>Change Rate / 24 hours</TableCell>\r\n                    <TableCell>Price</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      {rateSetting &&\r\n                        rateSetting.currency.charAt(0).toUpperCase() +\r\n                          rateSetting.currency.slice(1)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {rateSetting && rateSetting.changeRate}\r\n                    </TableCell>\r\n                    <TableCell>{rateSetting && rateSetting.price}</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n              </Table>\r\n            </TableContainer>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      colSpan=\"2\"\r\n                      style={{ textAlign: \"center\", fontSize: \"30px\" }}\r\n                    >\r\n                      Profit List\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Profit at End Date </TableCell>\r\n                    <TableCell>{profitData && \"$ \" + profitData}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Daily Profit</TableCell>\r\n                    <TableCell>\r\n                      {profitDataList && \"$ \" + profitDataList.daily}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Weekly Profit</TableCell>\r\n                    <TableCell>\r\n                      {profitDataList && \"$ \" + profitDataList.weekly}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Monthly Profit</TableCell>\r\n                    <TableCell>\r\n                      {profitDataList && \"$ \" + profitDataList.monthly}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Yearly Profit</TableCell>\r\n                    <TableCell>\r\n                      {profitDataList && \"$ \" + profitDataList.yearly}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n\r\n      <Hidden only={[\"md\", \"lg\", \"xl\"]}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          style={{\r\n            paddingTop: \"20px\",\r\n          }}\r\n        >\r\n          <Grid item xs={12} style={{ padding: \"2%\" }}>\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.mobileTable} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      Cryptocurrency\r\n                    </TableCell>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      {rateSetting &&\r\n                        rateSetting.currency.charAt(0).toUpperCase() +\r\n                          rateSetting.currency.slice(1)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      Change Rate / 24 hours\r\n                    </TableCell>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      {rateSetting && rateSetting.changeRate}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>Price</TableCell>\r\n\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      {\" \"}\r\n                      {rateSetting && rateSetting.price}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n              </Table>\r\n            </TableContainer>\r\n            <Hidden only={[\"sm\", \"xs\"]}>\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </Hidden>\r\n            <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n              <Grid\r\n                container\r\n                style={{ marginTop: \"20px\", paddingLeft: \"10px\" }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    background: Background,\r\n                    width: \"100%\",\r\n\r\n                    height: \"30\",\r\n                    overflow: \"auto\",\r\n                  }}\r\n                >\r\n                  <h3\r\n                    style={{\r\n                      background: \"#19469A\",\r\n                      padding: \"10px\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    Recommended Platform\r\n                  </h3>\r\n\r\n                  <Paper elevation={0} className=\"recmondedPlatFormPaper\">\r\n                    {cryptoData &&\r\n                      Object.entries(cryptoData).map(([key, value]) => (\r\n                        <div\r\n                          style={{\r\n                            paddingLeft: \"25px\",\r\n                            paddingTop: \"15px\",\r\n                            paddingBottom: \"5px\",\r\n                            overflow: \"hidden\",\r\n                            borderBottom: \"1px solid black\",\r\n                          }}\r\n                          key={key}\r\n                        >\r\n                          <p style={{ fontSize: \"1.5rem\", fontWeight: \"600\" }}>\r\n                            {key}\r\n                          </p>\r\n                          <a\r\n                            href={value.Link}\r\n                            target=\"_blank\"\r\n                            style={{\r\n                              fontSize: \"1rem\",\r\n                              fontWeight: \"600\",\r\n                              color: MainColor,\r\n                            }}\r\n                          >\r\n                            {value.Link}\r\n                          </a>\r\n                          <p style={{ fontSize: \"1rem\", fontWeight: \"400\" }}>\r\n                            Reward: {value.Reward}\r\n                          </p>\r\n                        </div>\r\n                      ))}\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Hidden>\r\n\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.mobileTable} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      colSpan=\"2\"\r\n                      style={{ textAlign: \"center\", fontSize: \"18px\" }}\r\n                    >\r\n                      Profit List\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      Profit at End Date{\" \"}\r\n                    </TableCell>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      {profitData && \"$ \" + profitData}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      Daily Profit\r\n                    </TableCell>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      {profitDataList && \"$ \" + profitDataList.daily}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      Weekly Profit\r\n                    </TableCell>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      {profitDataList && \"$ \" + profitDataList.weekly}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      Monthly Profit\r\n                    </TableCell>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      {profitDataList && \"$ \" + profitDataList.monthly}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      Yearly Profit\r\n                    </TableCell>\r\n                    <TableCell style={{ fontSize: \"12px\" }}>\r\n                      {profitDataList && \"$ \" + profitDataList.yearly}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GraphScreenCenter;\r\n","export const setCurrency = (data) => {\r\n  return {\r\n    type: \"SET_CURRENCY_NAME\",\r\n    payload: data,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport GraphScreenLeft from \"./GraphScreenLeft\";\r\nimport GraphScreenCenter from \"./GraphScreenCenter\";\r\n\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport randomColor from \"randomcolor\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CurrencySystem from \"./CurrencySystem\";\r\n\r\nconst GraphScreen = () => {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n\r\n          overflowY: \"hidden\",\r\n        }}\r\n      >\r\n        {/* left grid */}\r\n        <Grid item md={3} xs={12}>\r\n          <GraphScreenLeft />\r\n        </Grid>\r\n        {/* center grid */}\r\n        <Grid item md={9} xs={12}>\r\n          <GraphScreenCenter />\r\n        </Grid>\r\n\r\n        <Hidden only={[\"sm\", \"xs\"]}>\r\n          <Grid\r\n            item\r\n            style={{\r\n              paddingLeft: \"50px\",\r\n              paddingRight: \"200px\",\r\n              paddingTop: \"50px\",\r\n              paddingBottom: \"50px\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                textAlign: \"justify\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"600\",\r\n              }}\r\n            >\r\n              The Effective earnings depend on ay dynamic variables. Even the\r\n              presented results are based on proprietary predication formulas.\r\n              We do not guarantee any kind of earning. Please read our\r\n              <span style={{ color: \"red\" }}> Disclaimer</span> for further\r\n              information.\r\n            </p>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Hidden only={[\"md\", \"lg\", \"xl\"]}>\r\n          <Grid\r\n            item\r\n            style={{\r\n              paddingLeft: \"5%\",\r\n              paddingRight: \"5%\",\r\n              paddingTop: \"5%\",\r\n              paddingBottom: \"10%\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                textAlign: \"justify\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"600\",\r\n              }}\r\n            >\r\n              The Effective earnings depend on ay dynamic variables. Even the\r\n              presented results are based on proprietary predication formulas.\r\n              We do not guarantee any kind of earning. Please read our\r\n              <span style={{ color: \"red\" }}> Disclaimer</span> for further\r\n              information.\r\n            </p>\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GraphScreen;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst CustomCircle = (props) => {\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div className=\"customCircle\"></div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          display: \"flex\",\r\n\r\n          top: 62,\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          style={{\r\n            fontSize: props.text.length < 11 ? \"20px\" : \"17px\",\r\n            fontWeight: \"606\",\r\n            color: \"#19469a\",\r\n          }}\r\n        >\r\n          {props.text}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCircle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport CurrencySystem from \"./CurrencySystem\";\r\nimport randomColor from \"randomcolor\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { formCryptoApi } from \"../../Services/ChatServices\";\r\nimport { userCryptoDataSaveAction } from \"../../action/chatScreenAction\";\r\nimport { cryptoDataAction } from \"../../action/chatScreenAction\";\r\nimport { changeTabAction } from \"../../action/tabAction\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CustomCircle from \"./CustomCircle\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#31BDF4\",\r\n    background: \"rgba(182,172,162,0.2)\",\r\n  },\r\n}));\r\n\r\nconst FiatScreenLeft = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const cryptoData = useSelector(\r\n    (state) => state.chatScreen.cryptoData.conversion_dict\r\n  );\r\n\r\n  const fiatDate = useSelector(\r\n    (state) =>\r\n      state.chatScreen.userFiatData && state.chatScreen.userFiatData.end_date\r\n  );\r\n\r\n  const fiatConversionDict = useSelector(\r\n    (state) =>\r\n      !Array.isArray(state.chatScreen.fiatData) &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.converted_cryptos\r\n  );\r\n\r\n  const fiatChangeRate = useSelector(\r\n    (state) =>\r\n      state.chatScreen.fiatData &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.changerate_cryptos\r\n  );\r\n\r\n  const fiatAmount = useSelector(\r\n    (state) =>\r\n      state.chatScreen.userFiatData && state.chatScreen.userFiatData.count_fiat\r\n  );\r\n\r\n  const cryptoDict = useSelector((state) =>\r\n    state.chatScreen.cryptoData ? state.chatScreen.cryptoData.crypto_dict : null\r\n  );\r\n  const cryptoDictInput = useSelector((state) =>\r\n    state.chatScreen.userCryptoData\r\n      ? state.chatScreen.userCryptoData.count_crypto\r\n      : null\r\n  );\r\n\r\n  const [amountText, setAmountText] = useState(null);\r\n  let history = useHistory();\r\n\r\n  let covertAmount = () => {\r\n    let currency = Object.keys(cryptoDict)[0];\r\n\r\n    let coinPriceWithoutDolor = cryptoDict[currency].price.replace(\"$\", \"\");\r\n    let coinPriceWithoutComa = coinPriceWithoutDolor.replace(\",\", \"\");\r\n    let amount = parseFloat(cryptoDictInput) * parseFloat(coinPriceWithoutComa);\r\n\r\n    setAmountText(\"$\" + amount.toFixed(2));\r\n  };\r\n  useEffect(() => {\r\n    if (cryptoDict) {\r\n      covertAmount();\r\n    }\r\n  }, []);\r\n\r\n  let secondApi = async (t, c) => {\r\n    let apiTwoFormData = new FormData();\r\n    let formCryptoData = {\r\n      type_crypto: t,\r\n      count_crypto: c.toString(),\r\n      end_date: fiatDate && fiatDate,\r\n    };\r\n    let newData = JSON.stringify(formCryptoData);\r\n    apiTwoFormData.append(\"data\", newData);\r\n    try {\r\n      setLoading(true);\r\n      let { data } = await formCryptoApi(apiTwoFormData);\r\n\r\n      if (\r\n        data.conversion_dict === \"Cryptocurrency not availbale\" ||\r\n        data.conversion_dict === \"Invalid end date\"\r\n      ) {\r\n        setLoading(false);\r\n\r\n        emailToast();\r\n      } else {\r\n        dispatch(userCryptoDataSaveAction(formCryptoData));\r\n        setLoading(false);\r\n        dispatch(cryptoDataAction(data));\r\n        dispatch(changeTabAction(0));\r\n      }\r\n    } catch (error1) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  let conversionClick = (v, k) => {\r\n    secondApi(k, v);\r\n  };\r\n\r\n  const emailToast = () => {\r\n    toast.error(\"Cryptocurrency not available..\", {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      draggable: false,\r\n    });\r\n  };\r\n\r\n  let handelAgain = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <ToastContainer />\r\n\r\n      <Grid container direction=\"column\">\r\n        {/* top circle full screen */}\r\n\r\n        <Hidden only={[\"xs\", \"sm\"]}>\r\n          <div style={{ display: \"flex\", position: \"relative\" }}>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <div style={{ display: \"flex\", position: \"relative\" }}>\r\n                <CustomCircle text={fiatAmount && \"$\" + fiatAmount} />\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  bottom: \"10px\",\r\n                  right: \"1%\",\r\n                }}\r\n              >\r\n                <h3>\r\n                  Total <br></br> Investment\r\n                </h3>\r\n              </div>\r\n            </Grid>\r\n          </div>\r\n        </Hidden>\r\n\r\n        {/* top circle bottom screen */}\r\n\r\n        <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100vw\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              overflowY: \"hidden\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                overflowY: \"hidden\",\r\n              }}\r\n            >\r\n              <CustomCircle text={fiatAmount && \"$\" + fiatAmount} />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10px\",\r\n                overflowY: \"hidden\",\r\n              }}\r\n            >\r\n              <h2>Total Investment</h2>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Button\r\n              style={{\r\n                background: \"#19469A\",\r\n                color: \"white\",\r\n                marginTop: \"25px\",\r\n              }}\r\n              onClick={handelAgain}\r\n            >\r\n              Try again with different options\r\n            </Button>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Hidden only={[\"xs\", \"sm\"]}>\r\n          <Grid container style={{ marginTop: \"20px\", paddingLeft: \"10px\" }}>\r\n            <Grid item xs={12}>\r\n              <h3> Conversion Rates</h3>\r\n\r\n              <Paper elevation={0} id=\"conversionRatePaper\">\r\n                {fiatConversionDict &&\r\n                  Object.entries(fiatConversionDict).map(([key, value]) => (\r\n                    <CurrencySystem\r\n                      color={randomColor()}\r\n                      key={key}\r\n                      currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                      value={value}\r\n                      button={true}\r\n                      handelClick={() => {\r\n                        conversionClick(value, key);\r\n                      }}\r\n                    />\r\n                  ))}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n          <Grid container style={{ marginTop: \"20px\", padding: \"10px\" }}>\r\n            <Grid item xs={12}>\r\n              <h3> Conversion Rates</h3>\r\n\r\n              <Paper elevation={0} id=\"conversionRatePaper\">\r\n                {fiatConversionDict &&\r\n                  Object.entries(fiatConversionDict).map(([key, value]) => (\r\n                    <CurrencySystem\r\n                      color={randomColor()}\r\n                      key={key}\r\n                      currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                      value={value}\r\n                      button={true}\r\n                      handelClick={() => {\r\n                        conversionClick(value, key);\r\n                      }}\r\n                    />\r\n                  ))}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiatScreenLeft;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { changeTabAction } from \"../../action/tabAction\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { userCryptoDataSaveAction } from \"../../action/chatScreenAction\";\r\nimport { cryptoDataAction } from \"../../action/chatScreenAction\";\r\nimport { formCryptoApi } from \"../../Services/ChatServices\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#31BDF4\",\r\n    background: \"rgba(182,172,162,0.2)\",\r\n  },\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n  mobileTable: {\r\n    minWidth: 200,\r\n  },\r\n}));\r\nconst FiatScreenCenter = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const fiatData = useSelector(\r\n    (state) =>\r\n      state.chatScreen.fiatData &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.recommended_crypto\r\n  );\r\n  let history = useHistory();\r\n\r\n  const fiatDate = useSelector(\r\n    (state) =>\r\n      state.chatScreen.userFiatData && state.chatScreen.userFiatData.end_date\r\n  );\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let secondApi = async () => {\r\n    let apiTwoFormData = new FormData();\r\n    let formCryptoData = {\r\n      type_crypto: fiatData && fiatData.Name,\r\n      count_crypto: fiatData && fiatData.conversionrate.toString(),\r\n      end_date: fiatDate && fiatDate,\r\n    };\r\n    let newData = JSON.stringify(formCryptoData);\r\n    apiTwoFormData.append(\"data\", newData);\r\n\r\n    try {\r\n      setLoading(true);\r\n      let { data } = await formCryptoApi(apiTwoFormData);\r\n      if (data.conversion_dict === \"Cryptocurrency not availbale\") {\r\n        setError(\"Cryptocurrency not available\");\r\n      } else {\r\n        dispatch(userCryptoDataSaveAction(formCryptoData));\r\n        setLoading(false);\r\n        dispatch(cryptoDataAction(data));\r\n        dispatch(changeTabAction(0));\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 4000);\r\n    } catch (error1) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  let handelStacking = () => {\r\n    secondApi();\r\n  };\r\n  const [error, setError] = useState(null);\r\n\r\n  let handelAgain = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Hidden only={[\"sm\", \"xs\"]}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          style={{\r\n            paddingLeft: \"10%\",\r\n            paddingRight: \"10%\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              background: \"#19469A\",\r\n              color: \"white\",\r\n              float: \"right\",\r\n              marginRight: \"10%\",\r\n            }}\r\n            onClick={handelAgain}\r\n          >\r\n            Try again with different options\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan=\"2\"\r\n                    style={{ textAlign: \"center\", fontSize: \"24px\" }}\r\n                  >\r\n                    Recommended Cryptocurrency\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>\r\n                    {fiatData &&\r\n                      fiatData.Name.charAt(0).toUpperCase() +\r\n                        fiatData.Name.slice(1)}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Reward Rate</TableCell>\r\n                  <TableCell>{fiatData && fiatData.changerate}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Conversion Rate</TableCell>\r\n                  <TableCell>{fiatData && fiatData.conversionrate}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Price of Crypto</TableCell>\r\n                  <TableCell>{fiatData && fiatData.price}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n            </Table>\r\n          </TableContainer>\r\n          <br></br>\r\n          <br></br>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: error ? \"flex\" : \"none\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error && error}\r\n            </Alert>\r\n          </Grid>\r\n\r\n          <Button\r\n            style={{\r\n              background: \"#19469A\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={handelStacking}\r\n          >\r\n            Get Stacking\r\n          </Button>\r\n        </Grid>\r\n      </Hidden>\r\n      <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          style={{\r\n            marginTop: \"5%\",\r\n            overflowX: \"hidden\",\r\n          }}\r\n        >\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan=\"2\"\r\n                    style={{ textAlign: \"center\", fontSize: \"24px\" }}\r\n                  >\r\n                    Recommended Cryptocurrency\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>\r\n                    {fiatData &&\r\n                      fiatData.Name.charAt(0).toUpperCase() +\r\n                        fiatData.Name.slice(1)}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Reward Rate</TableCell>\r\n                  <TableCell>{fiatData && fiatData.changerate}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Conversion Rate</TableCell>\r\n                  <TableCell>{fiatData && fiatData.conversionrate}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Price of Crypto</TableCell>\r\n                  <TableCell>{fiatData && fiatData.price}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n            </Table>\r\n          </TableContainer>\r\n          <br></br>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: error ? \"flex\" : \"none\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error && error}\r\n            </Alert>\r\n          </Grid>\r\n          <br></br>\r\n\r\n          <Button\r\n            style={{\r\n              background: \"#19469A\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={handelStacking}\r\n          >\r\n            Get Stacking\r\n          </Button>\r\n        </Grid>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiatScreenCenter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport FiatScreenLeft from \"./FiatScreenLeft\";\r\n\r\nimport FiatScreenCenter from \"./FiatScreenCenter\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport randomColor from \"randomcolor\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CurrencySystem from \"./CurrencySystem\";\r\n\r\nconst FiatScreen = () => {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  const fiatChangeRate = useSelector(\r\n    (state) =>\r\n      !Array.isArray(state.chatScreen.fiatData) &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.changerate_cryptos\r\n  );\r\n\r\n  const fiatPriceDict = useSelector(\r\n    (state) =>\r\n      !Array.isArray(state.chatScreen.fiatData) &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.price_dict\r\n  );\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        {/* left grid */}\r\n        <Grid item md={3}>\r\n          <FiatScreenLeft />\r\n        </Grid>\r\n        {/* center grid */}\r\n        <Grid item xs={12} md={9}>\r\n          <FiatScreenCenter />\r\n        </Grid>\r\n\r\n        <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n          <Grid container style={{ marginTop: \"20px\", paddingLeft: \"10px\" }}>\r\n            <Grid item xs={12}>\r\n              <h3> Price</h3>\r\n\r\n              <Paper elevation={0} id=\"conversionRatePaper\">\r\n                {fiatPriceDict &&\r\n                  Object.entries(fiatPriceDict).map(([key, value]) => (\r\n                    <CurrencySystem\r\n                      color={randomColor()}\r\n                      key={key}\r\n                      currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                      value={value}\r\n                    />\r\n                  ))}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n          <Grid container style={{ marginTop: \"20px\", paddingLeft: \"10px\" }}>\r\n            <Grid item xs={12}>\r\n              <h3> Change rate per 24 hours</h3>\r\n\r\n              <Paper elevation={0} id=\"conversionRatePaper\">\r\n                {fiatChangeRate &&\r\n                  Object.entries(fiatChangeRate).map(([key, value]) => (\r\n                    <CurrencySystem\r\n                      color={randomColor()}\r\n                      key={key}\r\n                      currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                      value={value}\r\n                    />\r\n                  ))}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Hidden only={[\"sm\", \"xs\"]}>\r\n          <Grid\r\n            item\r\n            style={{\r\n              paddingLeft: \"50px\",\r\n              paddingRight: \"200px\",\r\n              paddingTop: \"50px\",\r\n              paddingBottom: \"50px\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                textAlign: \"justify\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"600\",\r\n              }}\r\n            >\r\n              The Effective earnings depend on ay dynamic variables. Even the\r\n              presented results are based on proprietary predication formulas.\r\n              We do not guarantee any kind of earning. Please read our\r\n              <span style={{ color: \"red\" }}> Disclaimer</span> for further\r\n              information.\r\n            </p>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Hidden only={[\"md\", \"lg\", \"xl\"]}>\r\n          <Grid\r\n            item\r\n            style={{\r\n              paddingLeft: \"5%\",\r\n              paddingRight: \"5%\",\r\n              paddingTop: \"5%\",\r\n              paddingBottom: \"10%\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                textAlign: \"justify\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"600\",\r\n              }}\r\n            >\r\n              The Effective earnings depend on ay dynamic variables. Even the\r\n              presented results are based on proprietary predication formulas.\r\n              We do not guarantee any kind of earning. Please read our\r\n              <span style={{ color: \"red\" }}> Disclaimer</span> for further\r\n              information.\r\n            </p>\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiatScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tabs from \"./Tabs\";\r\nimport GraphScreen from \"./GraphScreen\";\r\nimport FiatScreen from \"./FiatScreen\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport moment from \"moment\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { formCryptoApi } from \"../../Services/ChatServices\";\r\nimport { tabAction } from \"../../action/tabAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { cryptoDataAction } from \"../../action/chatScreenAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#31BDF4\",\r\n    background: \"rgba(182,172,162,0.2)\",\r\n  },\r\n}));\r\n\r\nconst TabScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n  const userCryptoDataFromStore = useSelector(\r\n    (state) => state.chatScreen.userCryptoData\r\n  );\r\n\r\n  const [showDateInput, setShowDateInput] = useState(false);\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const userCrypto = useSelector((state) => state.chatScreen.cryptoData);\r\n  const userFiat = useSelector((state) => state.chatScreen.fiatData);\r\n\r\n  useEffect(() => {\r\n    getShow();\r\n  }, [props.dateShow]);\r\n\r\n  let getShow = (value) => {\r\n    setShowDateInput(value);\r\n  };\r\n  let handelDayClick = async (e) => {\r\n    let endDate = moment(e).format(\"yyyy-MM-DD\");\r\n\r\n    let apiTwoFormData = new FormData();\r\n\r\n    let dataObject = {\r\n      count_crypto: userCryptoDataFromStore.count_crypto,\r\n      end_date: endDate,\r\n      type_crypto: userCryptoDataFromStore.type_crypto,\r\n    };\r\n\r\n    let newData = JSON.stringify(dataObject);\r\n    apiTwoFormData.append(\"data\", newData);\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      let { data } = await formCryptoApi(apiTwoFormData);\r\n\r\n      setLoading(false);\r\n\r\n      dispatch(cryptoDataAction(data));\r\n    } catch (error1) {\r\n      setLoading(false);\r\n    }\r\n\r\n    setShowDateInput(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {!Array.isArray(userCrypto) && !Array.isArray(userFiat) ? (\r\n        <Tabs\r\n          headers={[\"Crypto\", \"Fiat\"]}\r\n          dateShow={(value) => {\r\n            getShow(value);\r\n          }}\r\n        >\r\n          <GraphScreen />\r\n          <FiatScreen />\r\n        </Tabs>\r\n      ) : !Array.isArray(userCrypto) ? (\r\n        <Tabs\r\n          headers={[\"Crypto\"]}\r\n          dateShow={(value) => {\r\n            getShow(value);\r\n          }}\r\n        >\r\n          <GraphScreen />\r\n\r\n          <h1>Hello 1 Week</h1>\r\n        </Tabs>\r\n      ) : !Array.isArray(userFiat) ? (\r\n        <Tabs\r\n          headers={[\"Fiat\"]}\r\n          dateShow={(value) => {\r\n            getShow(value);\r\n          }}\r\n        >\r\n          <FiatScreen />\r\n\r\n          <h1>Hello 1 Week</h1>\r\n        </Tabs>\r\n      ) : null}\r\n\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"10%\",\r\n          display: showDateInput ? \"block\" : \"none\",\r\n        }}\r\n      >\r\n        <Calendar\r\n          onClickDay={handelDayClick}\r\n          // value={value}\r\n          minDate={new Date()}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TabScreen;\r\n","import React from \"react\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport { MainColor, Background } from \"../../Colors.json\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CurrencySystem from \"./CurrencySystem\";\r\nimport randomColor from \"randomcolor\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\nconst RecmondadPlatformList = () => {\r\n  const cryptoData = useSelector(\r\n    (state) => state.chatScreen.cryptoData.reward_dict\r\n  );\r\n  const tabName = useSelector((state) => state.tab.tabNumber);\r\n  const fiatPriceDict = useSelector(\r\n    (state) =>\r\n      !Array.isArray(state.chatScreen.fiatData) &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.price_dict\r\n  );\r\n\r\n  const fiatChangeRate = useSelector(\r\n    (state) =>\r\n      !Array.isArray(state.chatScreen.fiatData) &&\r\n      state.chatScreen.fiatData.recommended_fiat_dict.changerate_cryptos\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n        <Grid container>\r\n          {tabName === \"Crypto\" ? (\r\n            <>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  background: MainColor,\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{ fontSize: \"20px\", color: \"white\", padding: \"25px\" }}\r\n                >\r\n                  Recommended Platform\r\n                </p>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  background: Background,\r\n                  width: \"100%\",\r\n\r\n                  height: \"80vh\",\r\n                  overflow: \"auto\",\r\n                }}\r\n              >\r\n                <Paper elevation={0} className=\"recmondedPlatFormPaper\">\r\n                  {cryptoData &&\r\n                    Object.entries(cryptoData).map(([key, value]) => (\r\n                      <div\r\n                        style={{\r\n                          paddingLeft: \"25px\",\r\n                          paddingTop: \"15px\",\r\n                          paddingBottom: \"5px\",\r\n                          overflow: \"hidden\",\r\n                          borderBottom: \"1px solid black\",\r\n                        }}\r\n                        key={key}\r\n                      >\r\n                        <p style={{ fontSize: \"1.5rem\", fontWeight: \"600\" }}>\r\n                          {key}\r\n                        </p>\r\n                        <a\r\n                          href={value.Link}\r\n                          target=\"_blank\"\r\n                          style={{\r\n                            fontSize: \"1rem\",\r\n                            fontWeight: \"600\",\r\n                            color: MainColor,\r\n                          }}\r\n                        >\r\n                          {value.Link}\r\n                        </a>\r\n                        <p style={{ fontSize: \"1rem\", fontWeight: \"400\" }}>\r\n                          Reward: {value.Reward}\r\n                        </p>\r\n                      </div>\r\n                    ))}\r\n                </Paper>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  background: MainColor,\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{ fontSize: \"16px\", color: \"white\", padding: \"12px\" }}\r\n                >\r\n                  Price\r\n                </p>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  background: Background,\r\n                  width: \"100%\",\r\n\r\n                  height: \"38vh\",\r\n                  overflow: \"auto\",\r\n                }}\r\n              >\r\n                <Paper elevation={0} className=\"recmondedPlatFormPaper\">\r\n                  {fiatPriceDict &&\r\n                    Object.entries(fiatPriceDict).map(([key, value]) => (\r\n                      <CurrencySystem\r\n                        color={randomColor()}\r\n                        key={key}\r\n                        currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                        value={value}\r\n                      />\r\n                    ))}\r\n                </Paper>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  background: MainColor,\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  marginBottom: \"10px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{ fontSize: \"16px\", color: \"white\", padding: \"12px\" }}\r\n                >\r\n                  Change rate per 24 hours\r\n                </p>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  background: Background,\r\n                  width: \"100%\",\r\n\r\n                  height: \"38vh\",\r\n                  overflow: \"auto\",\r\n                }}\r\n              >\r\n                <Paper elevation={0} className=\"recmondedPlatFormPaper\">\r\n                  {fiatChangeRate &&\r\n                    Object.entries(fiatChangeRate).map(([key, value]) => (\r\n                      <CurrencySystem\r\n                        color={randomColor()}\r\n                        key={key}\r\n                        currency={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                        value={value}\r\n                      />\r\n                    ))}\r\n                </Paper>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecmondadPlatformList;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TabScreen from \"./TabScreen\";\r\nimport RecmondadPlatformList from \"./RecmondadPlatformList\";\r\n\r\nconst MainRecmondationScreen = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n      style={{ padding: \"1%\" }}\r\n    >\r\n      <Grid item xs={12} md={3} style={{ paddingRight: \"10px\" }}>\r\n        <RecmondadPlatformList />\r\n      </Grid>\r\n      <Grid item xs={12} md={9}>\r\n        <TabScreen />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MainRecmondationScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Paper, Grid, IconButton } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { animateScroll } from \"react-scroll\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { cryptoDataAction } from \"../../action/chatScreenAction\";\r\nimport { fiatDataAction } from \"../../action/chatScreenAction\";\r\nimport { userCryptoDataSaveAction } from \"../../action/chatScreenAction\";\r\nimport { userFiatDataSaveAction } from \"../../action/chatScreenAction\";\r\nimport { formFiatApi } from \"../../Services/ChatServices\";\r\nimport { formCryptoApi } from \"../../Services/ChatServices\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { resetUser } from \"../../action/chatScreenAction\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#31BDF4\",\r\n    background: \"rgba(182,172,162,0.2)\",\r\n  },\r\n}));\r\n\r\nconst ChatScreen = () => {\r\n  const [showDateBox, setShowDateBox] = useState(false);\r\n  const [dateValue, setDateValue] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  let history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let handelDayClick = (e) => {\r\n    let endDate = moment(e).format(\"yyyy-MM-DD\");\r\n    setDateValue(endDate);\r\n    setShowDateBox(false);\r\n  };\r\n\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    dispatch(resetUser());\r\n  }, []);\r\n\r\n  const [tomorrowDate, setTomorrowDate] = useState(\"\");\r\n\r\n  let getTomorrow = () => {\r\n    const today = new Date();\r\n\r\n    let tomorrow = new Date();\r\n    let tomorrowDate = tomorrow.setDate(today.getDate() + 1);\r\n    let finalDate = moment(tomorrowDate).format(\"yyyy-MM-DD\");\r\n    setTomorrowDate(finalDate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTomorrow();\r\n  }, []);\r\n\r\n  let questionList = [\r\n    {\r\n      type: \"system\",\r\n\r\n      message: \"Do you want to stake a cryptocurrency?\",\r\n    },\r\n    {\r\n      type: \"system\",\r\n\r\n      message: \"Which cryptocurrency do you want to stake?\",\r\n    },\r\n    {\r\n      type: \"system\",\r\n\r\n      message: \"How much of this cryptocurrency do you want to stake?\",\r\n    },\r\n    {\r\n      type: \"system\",\r\n\r\n      message: \"Do you also want to invest in fiat money?\",\r\n    },\r\n    {\r\n      type: \"system\",\r\n\r\n      message: \"How much fiat money in dollars you have?\",\r\n    },\r\n  ];\r\n\r\n  let [messages, setMessages] = useState([\r\n    {\r\n      type: \"system\",\r\n      ansType: \"bol\",\r\n      message: \"Do you own a cryptocurrency?\",\r\n    },\r\n  ]);\r\n\r\n  const [firstAnswer, setFirstAnswer] = useState(null);\r\n\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n\r\n  let handelReload = () => {\r\n    setError(null);\r\n    setMessages([\r\n      {\r\n        type: \"system\",\r\n        ansType: \"bol\",\r\n        message: \"Do you own a cryptocurrency?\",\r\n      },\r\n    ]);\r\n    setFirstAnswer(null);\r\n    setMessageInput(\"\");\r\n  };\r\n\r\n  let renderAnswer = () => {\r\n    switch (messages.length) {\r\n      case 1:\r\n        return boleanQuestionAnswerComponent();\r\n\r\n      case 3:\r\n        return textQuestionAnswerComponent(\"Enter Crypto Currency Name...\");\r\n\r\n      case 5:\r\n        return textQuestionAnswerComponent(\r\n          \"Enter Amount of cryptocurrency\",\r\n          \"number\"\r\n        );\r\n\r\n      case 7:\r\n        return boleanQuestionAnswerComponent();\r\n\r\n      case 9:\r\n        return textQuestionAnswerComponent(\r\n          \"Enter Fiat Money in USD...\",\r\n          \"number\"\r\n        );\r\n      case 10:\r\n        return submitAnswerComponent();\r\n\r\n      default:\r\n        return goodBy();\r\n    }\r\n  };\r\n\r\n  let updateScroll = () => {\r\n    var element = document.getElementById(\"inSidePaperMobile\");\r\n    if (element) {\r\n      element.scrollTop = element.scrollHeight;\r\n    }\r\n  };\r\n\r\n  let boleanQuestionAnswerComponent = () => {\r\n    return (\r\n      <Grid container style={{ marginTop: \"2%\" }} id=\"messageContainer\">\r\n        <Grid\r\n          item\r\n          xs={10}\r\n          style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}\r\n        >\r\n          <ButtonGroup disableElevation variant=\"contained\" color=\"default\">\r\n            <Button\r\n              style={{\r\n                background: firstAnswer === \"Yes\" ? \"#19469A\" : \"#757575\",\r\n                color: \"white\",\r\n              }}\r\n              onClick={() => setFirstAnswer(\"Yes\")}\r\n              startIcon={<CheckIcon />}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                background: firstAnswer === \"No\" ? \"#19469A\" : \"#757575\",\r\n                color: \"white\",\r\n              }}\r\n              onClick={() => setFirstAnswer(\"No\")}\r\n              endIcon={<CloseIcon />}\r\n            >\r\n              No\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n            style={{ background: \"#19469a\" }}\r\n            onClick={handelSend}\r\n          >\r\n            <SendIcon style={{ color: \"white\" }} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  let handelDateInput = () => {\r\n    setShowDateBox(!showDateBox);\r\n    let item = document.getElementById(\"datemessageTextInput\");\r\n    item.blur();\r\n  };\r\n\r\n  let goodBy = () => {\r\n    if (messages.length === 10) {\r\n      return (\r\n        <Grid container style={{ marginTop: \"2%\" }} id=\"messageContainer\">\r\n          <Grid item xs={10}>\r\n            <h3>Good By...</h3>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n              style={{\r\n                background: \"#19469a\",\r\n                position: \"absolute\",\r\n                bottom: \"0\",\r\n              }}\r\n              onClick={handelSend}\r\n            >\r\n              <SendIcon style={{ color: \"white\" }} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n  };\r\n\r\n  let handelDate = () => {};\r\n  let dateInputAnswerComponent = (placeholderValue) => {\r\n    if (messages[1].message === \"Yes\" || messages[7].message === \"Yes\") {\r\n      return (\r\n        <>\r\n          <Grid container style={{ marginTop: \"2%\" }} id=\"messageContainer\">\r\n            <Grid item xs={10}>\r\n              <div style={{ display: showDateBox ? \"flex\" : \"none\" }}>\r\n                <Calendar onClickDay={handelDayClick} minDate={new Date()} />\r\n              </div>\r\n\r\n              <input\r\n                id=\"datemessageTextInput\"\r\n                placeholder={placeholderValue || \"\"}\r\n                style={{ marginTop: \"10px\" }}\r\n                onClick={handelDateInput}\r\n                value={dateValue}\r\n                onChange={handelDate}\r\n                onKeyDown={handelMessageSendDate}\r\n                autoFocus\r\n                autoComplete=\"off\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={2}\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                style={{\r\n                  background: \"#19469a\",\r\n                  position: \"absolute\",\r\n                  bottom: \"0\",\r\n                }}\r\n                onClick={handelSend}\r\n              >\r\n                <SendIcon style={{ color: \"white\" }} />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  let textQuestionAnswerComponent = (placeholderValue, typeValue) => {\r\n    return (\r\n      <Grid container style={{ marginTop: \"2%\" }} id=\"messageContainer\">\r\n        <Grid\r\n          item\r\n          xs={10}\r\n          style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}\r\n        >\r\n          <input\r\n            id=\"messageTextInput\"\r\n            onChange={handelMessageInput}\r\n            onKeyDown={handelMessageSend}\r\n            type={typeValue || \"text\"}\r\n            placeholder={placeholderValue || \"\"}\r\n            value={messageInput}\r\n            autoFocus\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n            style={{ background: \"#19469a\" }}\r\n            onClick={handelSend}\r\n          >\r\n            <SendIcon style={{ color: \"white\" }} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  let firstApi = async () => {\r\n    let messageData = [...messages];\r\n    let apiOneFormData = new FormData();\r\n    let formFiatData = {\r\n      count_fiat: messageData[9].message,\r\n    };\r\n\r\n    let dispatchUserData = {\r\n      count_fiat: messageData[9].message,\r\n      end_date: tomorrowDate,\r\n    };\r\n\r\n    let newData2 = JSON.stringify(formFiatData);\r\n    apiOneFormData.append(\"data\", newData2);\r\n\r\n    try {\r\n      setLoading(true);\r\n      let { data } = await formFiatApi(apiOneFormData);\r\n\r\n      setLoading(false);\r\n      dispatch(userFiatDataSaveAction(dispatchUserData));\r\n\r\n      dispatch(fiatDataAction(data));\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  let secondApi = async () => {\r\n    let messageData = [...messages];\r\n    let apiTwoFormData = new FormData();\r\n    let formCryptoData = {\r\n      type_crypto: messageData[3].message,\r\n      count_crypto: messageData[5].message,\r\n      end_date: tomorrowDate,\r\n    };\r\n    let newData = JSON.stringify(formCryptoData);\r\n    apiTwoFormData.append(\"data\", newData);\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      let { data } = await formCryptoApi(apiTwoFormData);\r\n\r\n      if (data.conversion_dict === \"Cryptocurrency not available\") {\r\n        setLoading(false);\r\n        return data;\r\n      } else {\r\n        dispatch(userCryptoDataSaveAction(formCryptoData));\r\n        setLoading(false);\r\n        dispatch(cryptoDataAction(data));\r\n        return data;\r\n      }\r\n    } catch (error1) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  let handelSubmit = async () => {\r\n    let messageData = [...messages];\r\n\r\n    let q1Answer = messageData[1].message;\r\n    let q2Answer = messageData[7].message;\r\n\r\n    if (q1Answer === \"Yes\" && q2Answer === \"No\") {\r\n      let firstData = await secondApi();\r\n\r\n      if (firstData.conversion_dict === \"Cryptocurrency not availbale\") {\r\n        setError(\"Cryptocurrency not available\");\r\n      } else {\r\n        history.push(\"/crypto\");\r\n      }\r\n    } else if (q1Answer === \"No\" && q2Answer === \"Yes\") {\r\n      await firstApi();\r\n\r\n      history.push(\"/crypto\");\r\n    } else {\r\n      await firstApi();\r\n      let newData = await secondApi();\r\n\r\n      if (newData.conversion_dict === \"Cryptocurrency not availbale\") {\r\n        setError(\"Cryptocurrency not available\");\r\n      } else {\r\n        history.push(\"/crypto\");\r\n      }\r\n    }\r\n  };\r\n\r\n  let submitAnswerComponent = () => {\r\n    return (\r\n      <Grid container style={{ marginTop: \"2%\" }} id=\"messageContainer\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handelSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  let reloadComponent = () => {\r\n    return (\r\n      <Grid container style={{ marginTop: \"2%\" }} id=\"messageContainer\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: error ? \"flex\" : \"none\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            marginBottom: \"10px\",\r\n            paddingRight: \"5%\",\r\n          }}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error && error}\r\n          </Alert>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handelReload}>\r\n            Try Again\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  let addQuestionFunction = (value) => {\r\n    if (\r\n      messages.length === 10 &&\r\n      messages[1].message === \"No\" &&\r\n      messages[7].message === \"No\"\r\n    ) {\r\n      let previousMessages = [...messages];\r\n      let newMessageObject = {\r\n        type: \"system\",\r\n\r\n        message: \"GoodBy....\",\r\n      };\r\n      previousMessages.push(newMessageObject);\r\n      setMessages(previousMessages);\r\n    } else if (messages.length < 10) {\r\n      let previousMessages1 = [...messages];\r\n      let newMessageObject1 = questionList[value];\r\n      previousMessages1.push(newMessageObject1);\r\n      setMessages(previousMessages1);\r\n    }\r\n  };\r\n\r\n  let addQuestion = () => {\r\n    switch (messages.length) {\r\n      case 2:\r\n        addQuestionFunction(1);\r\n        break;\r\n      case 4:\r\n        addQuestionFunction(2);\r\n        break;\r\n      case 6:\r\n        addQuestionFunction(3);\r\n        break;\r\n      case 8:\r\n        addQuestionFunction(4);\r\n        break;\r\n      case 10:\r\n        addQuestionFunction();\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messages.length === 10) {\r\n      addQuestion();\r\n    } else {\r\n      setTimeout(() => {\r\n        addQuestion();\r\n      }, 2000);\r\n    }\r\n  }, [messages]);\r\n\r\n  let scrollToBottom = () => {\r\n    animateScroll.scrollToBottom({\r\n      containerId: \"inSidePaper\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n    setTimeout(() => {\r\n      updateScroll();\r\n    }, 300);\r\n  }, [messages]);\r\n\r\n  let handelMessageInput = (e) => {\r\n    setMessageInput(e.target.value);\r\n  };\r\n\r\n  let handelMessageSend = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      let senderObject = {\r\n        type: \"user\",\r\n        message: messageInput,\r\n      };\r\n      let newMessage = [...messages];\r\n      newMessage.push(senderObject);\r\n      setMessages(newMessage);\r\n      setMessageInput(\"\");\r\n    }\r\n  };\r\n\r\n  let handelMessageSendDate = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      let senderObject = {\r\n        type: \"user\",\r\n        message: dateValue,\r\n      };\r\n      let newMessage = [...messages];\r\n      newMessage.push(senderObject);\r\n      setMessages(newMessage);\r\n      setDateValue(\"\");\r\n    }\r\n  };\r\n\r\n  let handelSend = () => {\r\n    if (\r\n      firstAnswer !== null &&\r\n      firstAnswer === \"Yes\" &&\r\n      messages.length === 1\r\n    ) {\r\n      let senderObject = {\r\n        type: \"user\",\r\n        message: firstAnswer,\r\n      };\r\n      let newMessage = [...messages];\r\n      newMessage.push(senderObject);\r\n      setMessages(newMessage);\r\n      setFirstAnswer(null);\r\n    } else if (\r\n      firstAnswer !== null &&\r\n      firstAnswer === \"No\" &&\r\n      messages.length === 1\r\n    ) {\r\n      let senderObject = {\r\n        type: \"user\",\r\n        message: firstAnswer,\r\n      };\r\n      let empty1 = {\r\n        type: \"user\",\r\n        message: \"\",\r\n      };\r\n      let empty2 = {\r\n        type: \"user\",\r\n        message: \"\",\r\n      };\r\n      let empty3 = {\r\n        type: \"user\",\r\n        message: \"\",\r\n      };\r\n      let empty4 = {\r\n        type: \"user\",\r\n        message: \"\",\r\n      };\r\n      let newMessage = [...messages];\r\n      newMessage.push(senderObject);\r\n      newMessage.push(empty1);\r\n      newMessage.push(empty2);\r\n      newMessage.push(empty3);\r\n      newMessage.push(empty4);\r\n      setMessages(newMessage);\r\n      setFirstAnswer(null);\r\n    } else if (\r\n      firstAnswer !== null &&\r\n      firstAnswer === \"Yes\" &&\r\n      messages.length === 7\r\n    ) {\r\n      let senderObject = {\r\n        type: \"user\",\r\n        message: firstAnswer,\r\n      };\r\n      let newMessage = [...messages];\r\n      newMessage.push(senderObject);\r\n      setMessages(newMessage);\r\n      setFirstAnswer(null);\r\n    } else if (\r\n      firstAnswer !== null &&\r\n      firstAnswer === \"No\" &&\r\n      messages.length === 7\r\n    ) {\r\n      let empty5 = {\r\n        type: \"user\",\r\n        message: \"\",\r\n      };\r\n      let empty6 = {\r\n        type: \"user\",\r\n        message: \"\",\r\n      };\r\n      let senderObject = {\r\n        type: \"user\",\r\n        message: firstAnswer,\r\n      };\r\n      let newMessage = [...messages];\r\n      newMessage.push(senderObject);\r\n      newMessage.push(empty5);\r\n      newMessage.push(empty6);\r\n      setMessages(newMessage);\r\n      setFirstAnswer(null);\r\n    } else {\r\n      if (\r\n        messages.length === 3 ||\r\n        messages.length === 5 ||\r\n        messages.length === 9\r\n      ) {\r\n        if (messageInput.length > 0) {\r\n          let senderObject = {\r\n            type: \"user\",\r\n            message: messageInput,\r\n          };\r\n          let newMessage = [...messages];\r\n          newMessage.push(senderObject);\r\n          setMessages(newMessage);\r\n          setMessageInput(\"\");\r\n        }\r\n      } else if (messages.length === 11) {\r\n        if (dateValue.length > 0) {\r\n          let senderObject = {\r\n            type: \"user\",\r\n            message: tomorrowDate,\r\n          };\r\n          let newMessage = [...messages];\r\n          newMessage.push(senderObject);\r\n          setMessages(newMessage);\r\n          setDateValue(\"\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n        <Grid container direction=\"column\">\r\n          <Paper elevation={0} id=\"inSidePaper\">\r\n            {messages.map((item, index) => {\r\n              return item.message.length > 0 ? (\r\n                <div\r\n                  className={item.type === \"system\" ? \"left\" : \"right\"}\r\n                  key={index}\r\n                >\r\n                  <p>{item.message}</p>\r\n                </div>\r\n              ) : null;\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n        {messages.length === 11 && messages[10].message === \"GoodBy....\"\r\n          ? reloadComponent()\r\n          : renderAnswer()}\r\n      </Hidden>\r\n      <Hidden only={[\"lg\", \"md\", \"xl\"]}>\r\n        <Grid container direction=\"column\">\r\n          <Paper elevation={0} id=\"inSidePaperMobile\">\r\n            {messages.map((item, index) => {\r\n              return item.message.length > 0 ? (\r\n                <div\r\n                  className={\r\n                    item.type === \"system\" ? \"leftMobile\" : \"rightMobile\"\r\n                  }\r\n                  key={index}\r\n                >\r\n                  <p>{item.message}</p>\r\n                </div>\r\n              ) : null;\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n        {(messages.length === 11 && messages[10].message === \"GoodBy....\") ||\r\n        (messages.length === 12 && error)\r\n          ? reloadComponent()\r\n          : renderAnswer()}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatScreen;\r\n","export default __webpack_public_path__ + \"static/media/logo.fd54a7c4.png\";","export default __webpack_public_path__ + \"static/media/cpu.9af5c173.png\";","import React from \"react\";\r\nimport ChatScreen from \"./ChatScreen\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport logo from \"../../Assets/images/logo.png\";\r\nimport cpu from \"../../Assets/images/cpu.png\";\r\nimport Styled from \"styled-components\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\nconst Img = Styled.img`\r\n    height: 110px;\r\n    \r\n    padding:4px;\r\n`;\r\nconst ImgNew = Styled.img`\r\n    height: 60px;\r\n    \r\n    padding:4px;\r\n`;\r\nconst MobImg = Styled.img`\r\n    height: 70px;\r\n    \r\n    \r\n`;\r\n\r\nconst Chat = () => {\r\n  return (\r\n    <>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          id=\"chatScreen\"\r\n        >\r\n          <Grid\r\n            item\r\n            xs={4}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              {/* <img src={logo} style={{ width: \"40%\" }} /> */}\r\n              <Img src={logo} alt=\"apple\" />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"4%\",\r\n              }}\r\n            >\r\n              <h3>AI Powered Recommendation System</h3>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10%\",\r\n              }}\r\n            >\r\n              <ImgNew src={cpu} alt=\"apple\" />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Paper elevation={3} variant=\"outlined\" id=\"chatPaper\">\r\n              <ChatScreen />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n      <Hidden only={[\"md\", \"lg\", \"xl\"]}>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              padding: \"20px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <MobImg src={logo} alt=\"apple\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper elevation={3} variant=\"outlined\" id=\"chatPaperMobile\">\r\n              <ChatScreen />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import \"./custom.scss\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport MainRecmondationScreen from \"./Components/Recmondation/MainRecmondationScreen\";\r\nimport Chat from \"./Components/Chat/Chat\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Chat />\r\n        </Route>\r\n        <Route exact path=\"/crypto\">\r\n          <MainRecmondationScreen />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initalState = {\r\n  fiatData: [],\r\n  cryptoData: [],\r\n  userCryptoData: null,\r\n  userFiatData: null,\r\n};\r\n\r\nexport const chatScreenReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case \"SAVE_FIAT_DATA\":\r\n      return {\r\n        ...state,\r\n        fiatData: action.payload,\r\n      };\r\n    case \"SAVE_CRYPTO_DATA\":\r\n      return {\r\n        ...state,\r\n        cryptoData: action.payload,\r\n      };\r\n    case \"SAVE_USER_CRYPTO_DATA\":\r\n      return {\r\n        ...state,\r\n        userCryptoData: action.payload,\r\n      };\r\n    case \"SAVE_USER_FIAT_DATA\":\r\n      return {\r\n        ...state,\r\n        userFiatData: action.payload,\r\n      };\r\n    case \"RESET\":\r\n      return initalState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initalState = {\r\n  tabNumber: null,\r\n  newTabNumber: null,\r\n};\r\n\r\nexport const rabReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TAB_NUMBER\":\r\n      return {\r\n        ...state,\r\n        tabNumber: action.payload,\r\n      };\r\n    case \"CHANGE_TAB_NUMBER\":\r\n      return {\r\n        ...state,\r\n        newTabNumber: action.payload,\r\n      };\r\n\r\n    case \"RESET\":\r\n      return initalState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initalState = {\r\n  currency: null,\r\n};\r\n\r\nexport const currencyReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENCY_NAME\":\r\n      return {\r\n        ...state,\r\n        currency: action.payload,\r\n      };\r\n\r\n    case \"RESET\":\r\n      return initalState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport sessionStorage from \"redux-persist/lib/storage/session\";\r\nimport { chatScreenReducer } from \"./chatScreenReducer\";\r\nimport { rabReducer } from \"./tabReducer\";\r\nimport { currencyReducer } from \"./currencyReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: sessionStorage,\r\n  whitelist: [\"chatScreen\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  chatScreen: chatScreenReducer,\r\n  tab: rabReducer,\r\n  currency: currencyReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport rootReducer from \"./reducer/index\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\nexport const persistor = persistStore(store);\r\nexport default { store, persistor };\r\n// export default { store };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport { store, persistor } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}